import telebot
import config

from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

bot = telebot.TeleBot('2130619696:AAEyHVjqm-T-_OKnXfx-kBiRzBBkZRva4Dw')

INSTA = 'https://www.instagram.com/why_violetta/'

report = {}

report_text = {
    "place_hand": "–†—É–∫–∞",
    "place_leg": "–ù–æ–≥–∞",
    "place_back": "–°–ø–∏–Ω–∞",
    "place_ribs": "–†—ë–±—Ä–∞",
    "place_clavicle":"–ö–ª—é—á–∏—Ü—ã",
    "place_buttock": "–Ø–≥–æ–¥–∏—Ü—ã",
    "start_place_no": "–ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é",
    "place_no_visible_hand": "–ö–∏—Å—Ç—å —Ä—É–∫–∏",
    "place_no_visible_wrist": "–ó–∞–ø—è—Å—Ç—å–µ",
    "place_no_visible_forearm": "–ü—Ä–µ–¥–ø–ª–µ—á—å–µ",
    "place_no_visible_shoulder": "–ü–ª–µ—á–æ",
    "place_no_visible_hip": "–ë–µ–¥—Ä–æ",
    "place_no_visible_shin": "–ì–æ–ª–µ–Ω—å",
    "place_no_visible_neck": "–®–µ—è",
    "place_no_visible_clavicle": "–ö–ª—é—á–∏—Ü–∞",
    "place_no_invisible_back": "–°–ø–∏–Ω–∞",
    "place_no_invisible_ribs": "–†—ë–±—Ä–∞",
    "place_no_invisible_chest": "–ì—Ä—É–¥—å",
    "place_no_invisible_buttock": "–Ø–≥–æ–¥–∏—Ü—ã",
    "place_no_invisible_foot": "–°—Ç–æ–ø–∞",
    "color_color": "–¶–≤–µ—Ç–Ω–∞—è",
    "color_black": "–ß—ë—Ä–Ω–∞—è",
    "size_small": "–°–æ–≤—Å–µ–º –º–∞–ª–µ–Ω—å–∫—É—é, –¥–æ 5—Å–º",
    "size_medium": "–í –ø—Ä–µ–¥–µ–ª–∞—Ö –∞–ª—å–±–æ–º–Ω–æ–≥–æ –ª–∏—Å—Ç–∞",
    "size_large": "–•–æ—á—É –º–∞—Å—à—Ç–∞–±–Ω—É—é, —Ä—É–∫–∞–≤ –∏–ª–∏ –Ω–∞ –≤—Å—é —Å–ø–∏–Ω—É, –Ω–∞–ø—Ä–∏–º–µ—Ä",
    "method_vk": "vk",
    "method_tg": "Telegram",
    "method_wa": "WhatsApp",
    "method_ig": "Instagram",
    "method_lvs": "–õ–∏—á–Ω–æ –≤ —Å—Ç—É–¥–∏–∏",
    "sketch_yes": "–î–∞",
    "sketch_no": "–ù–µ—Ç",
}


@bot.message_handler(commands=["start"])
def command_start(message):
    chat_id = message.chat.id
    report[chat_id] = {}
    report[chat_id]["Telegram username"] = f"@{message.from_user.username}"
    report[chat_id]["Telegram ID"] = message.from_user.id

    # sti = open('AnimatedSticker.tgs', 'rb')
    # bot.send_sticker(message.chat.id, sti)

    markup = InlineKeyboardMarkup(row_width=1)
    item1 = InlineKeyboardButton("–î–∞–≤–∞–π!", callback_data="start")
    markup.add(item1)

    m = "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b>!" \
        " –î–∞–≤–∞–π —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é —Ç–∞—Ç—É–∏—Ä–æ–≤–∫—É)"
    bot.send_message(chat_id, m.format(message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    chat_id = call.message.chat.id

    if call.data == "start":
        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton("–î–∞", callback_data="start_yes")
        item2 = InlineKeyboardButton("–Ø –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëÄ", callback_data="start_just_see")
        item3 = InlineKeyboardButton("–ù–µ—Ç", callback_data="start_no")
        markup.add(item1, item2, item3)

        bot.send_message(chat_id, '–¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å —Ç–∞—Ç—É–∏—Ä–æ–≤–∫—É?', reply_markup=markup)
    elif call.data == "start_yes":
        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton("–†—É–∫–∞", callback_data="place_hand")
        item2 = InlineKeyboardButton("–ù–æ–≥–∞", callback_data="place_leg")
        item3 = InlineKeyboardButton("–°–ø–∏–Ω–∞", callback_data="place_back")
        item4 = InlineKeyboardButton("–†—ë–±—Ä–∞", callback_data="place_ribs")
        item5 = InlineKeyboardButton("–ö–ª—é—á–∏—Ü—ã", callback_data="place_clavicle")
        item6 = InlineKeyboardButton("–Ø–≥–æ–¥–∏—Ü—ã", callback_data="place_buttock")
        item7 = InlineKeyboardButton("–ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é", callback_data="start_place_no")
        markup.add(item1, item2, item3, item4, item5, item6, item7)

        bot.send_message(chat_id, '–¢—ã —É–∂–µ –∑–Ω–∞–µ—à—å, –Ω–∞ –∫–∞–∫–æ–º –º–µ—Å—Ç–µ –æ–Ω–∞ –±—É–¥–µ—Ç?', reply_markup=markup)
    elif call.data == 'start_just_see':
        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton("Instagram", url=INSTA)
        markup.add(item1)
        bot.send_message(chat_id, '–¢–æ–≥–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ –≥–ª—è–Ω—É—Ç—å –Ω–∞ –º–æ–π –∞–∫–∫–∞—É–Ω—Ç –≤ –∏–Ω—Å—Ç–µ,' +
                         ' —É–≤–µ—Ä–µ–Ω–∞ —Ç—ã –Ω–∞–π–¥—ë—à—å —á—Ç–æ-—Ç–æ –¥–ª—è —Å–µ–±—è ü§ó', reply_markup=markup)
    elif call.data == "start_no":
        bot.send_message(chat_id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω–∞ —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∞, —Ö–æ—Ä–æ—à–µ–≥–æ —Ç–µ–±–µ –¥–Ω—è)')
    elif call.data == "start_place_no":
        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton("–ê–≥–∞", callback_data="start_place_no_visible")
        item2 = InlineKeyboardButton("–ù–µ–∞", callback_data="start_place_no_invisible")
        markup.add(item1, item2)

        bot.send_message(chat_id, '–•–æ—á–µ—à—å, —á—Ç–æ–±—ã —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∞ –±—ã–ª–∞ –Ω–∞ –≤–∏–¥–Ω–æ–º –º–µ—Å—Ç–µ?', reply_markup=markup)
    elif call.data == "start_place_no_visible":
        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton("–ö–∏—Å—Ç—å —Ä—É–∫–∏", callback_data="place_no_visible_hand")
        item2 = InlineKeyboardButton("–ó–∞–ø—è—Å—Ç—å–µ", callback_data="place_no_visible_wrist")
        item3 = InlineKeyboardButton("–ü—Ä–µ–¥–ø–ª–µ—á—å–µ", callback_data="place_no_visible_forearm")
        item4 = InlineKeyboardButton("–ü–ª–µ—á–æ", callback_data="place_no_visible_shoulder")
        item5 = InlineKeyboardButton("–ë–µ–¥—Ä–æ", callback_data="place_no_visible_hip")
        item6 = InlineKeyboardButton("–ì–æ–ª–µ–Ω—å", callback_data="place_no_visible_shin")
        item7 = InlineKeyboardButton("–®–µ—è", callback_data="place_no_visible_neck")
        item8 = InlineKeyboardButton("–ö–ª—é—á–∏—Ü–∞", callback_data="place_no_visible_clavicle")
        markup.add(item1, item2, item3, item4, item5, item6, item7, item8)

        bot.send_message(chat_id, "–ì–¥–µ –∏–º–µ–Ω–Ω–æ?", reply_markup=markup)
    elif call.data == "start_place_no_invisible":
        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton("–°–ø–∏–Ω–∞", callback_data="place_no_invisible_back")
        item2 = InlineKeyboardButton("–†—ë–±—Ä–∞", callback_data="place_no_invisible_ribs")
        item3 = InlineKeyboardButton("–ì—Ä—É–¥—å", callback_data="place_no_invisible_chest")
        item4 = InlineKeyboardButton("–Ø–≥–æ–¥–∏—Ü—ã", callback_data="place_no_invisible_buttock")
        item5 = InlineKeyboardButton("–°—Ç–æ–ø–∞", callback_data="place_no_invisible_foot")
        markup.add(item1, item2, item3, item4, item5)

        bot.send_message(chat_id, "–ì–¥–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ?", reply_markup=markup)
    elif call.data.startswith("place_"):
        report[chat_id]['–ú–µ—Å—Ç–æ'] = call.data

        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton("–¶–≤–µ—Ç–Ω–∞—è", callback_data="color_color")
        item2 = InlineKeyboardButton("–ß—ë—Ä–Ω–∞—è", callback_data="color_black")
        markup.add(item1, item2)

        bot.send_message(chat_id, '–¢—ã —Ö–æ—á–µ—à—å —Ü–≤–µ—Ç–Ω—É—é –∏–ª–∏ —á—ë—Ä–Ω—É—é?', reply_markup=markup)
    elif call.data.startswith("color_"):
        report[chat_id]['–¶–≤–µ—Ç'] = call.data

        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton("–°–æ–≤—Å–µ–º –º–∞–ª–µ–Ω—å–∫—É—é, –¥–æ 5—Å–º", callback_data="size_small")
        item2 = InlineKeyboardButton("–í –ø—Ä–µ–¥–µ–ª–∞—Ö –∞–ª—å–±–æ–º–Ω–æ–≥–æ –ª–∏—Å—Ç–∞", callback_data="size_medium")
        item3 = InlineKeyboardButton("–•–æ—á—É –º–∞—Å—à—Ç–∞–±–Ω—É—é, —Ä—É–∫–∞–≤ –∏–ª–∏ –Ω–∞ –≤—Å—é —Å–ø–∏–Ω—É, –Ω–∞–ø—Ä–∏–º–µ—Ä", callback_data="size_large")
        markup.add(item1, item2, item3)

        bot.send_message(chat_id, '–ê –∫–∞–∫–æ–≥–æ –ø—Ä–∏–º–µ—Ä–Ω–æ —Ä–∞–∑–º–µ—Ä–∞?', reply_markup=markup)
    elif call.data.startswith("size_"):
        report[chat_id]['–†–∞–∑–º–µ—Ä'] = call.data

        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton("–ê–≥–∞, —Ö–æ—á—É –æ–±—Å—É–¥–∏—Ç—å", callback_data="sketch_yes")
        item2 = InlineKeyboardButton("–ù–µ—Ç, –º–Ω–µ –Ω—É–∂–Ω–∞ —Å —ç—Ç–∏–º –ø–æ–º–æ—â—å", callback_data="sketch_no")
        markup.add(item1, item2)

        bot.send_message(chat_id, '–•–æ—Ä–æ—à–æ, —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –∏–¥–µ—è –∏–ª–∏ –ø—Ä–∏–º–µ—Ä—ã —Ç–∞—Ç—É–∏—Ä–æ–≤–æ–∫/—Ä–∏—Å—É–Ω–∫–æ–≤,' +
                         ' –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è?', reply_markup=markup)
    elif call.data.startswith("sketch_"):
        report[chat_id]['–≠—Å–∫–∏–∑'] = call.data

        bot.send_message(chat_id, '–û—Ç–ª–∏—á–Ω–æ, –∫–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?')
    elif call.data.startswith("method_"):
        report[chat_id]['–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏'] = call.data
        bot.send_message(chat_id, '–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç')

       #—Å–≤–µ–∂–µ–µ
    # elif bot.answer_callback_query(callback_query_id=cmd.id, text="–ù–µ–≤–µ—Ä–Ω–æ, –í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç...", show_alert=True)


@bot.message_handler(content_types=['text'])
def handle_message(message):
    chat_id = message.chat.id

    if "–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏" in report[chat_id]:
        report[chat_id]['–ö–æ–Ω—Ç–∞–∫—Ç'] = message.text

        bot.send_message(-687551222, convert_report(report[chat_id]))
        bot.send_message(chat_id, '–°–ø–∞—Å–∏–±–æ! –Ø —Å–≤—è–∂—É—Å—å —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è)')
    elif "–†–∞–∑–º–µ—Ä" in report[chat_id]:
        report[chat_id]['–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞'] = message.text

        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton("vk", callback_data="method_vk")
        item2 = InlineKeyboardButton("Telegram", callback_data="method_tg")
        item3 = InlineKeyboardButton("WhatsApp", callback_data="method_wa")
        item4 = InlineKeyboardButton("Instagram", callback_data="method_ig")
        item5 = InlineKeyboardButton("–õ–∏—á–Ω–æ –≤ —Å—Ç—É–¥–∏–∏", callback_data="method_lvs")
        markup.add(item1, item2, item3, item4, item5)

        bot.send_message(chat_id, '–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è) –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞, ' +
                         '–Ω–∞–¥–µ—é—Å—å, —Ç–µ–±–µ —Ç–µ–ø–µ—Ä—å —Å—Ç–∞–ª–æ –ø–æ–Ω—è—Ç–Ω–µ–µ, –∫–∞–∫–∞—è —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∞ –ª–∏—á–Ω–æ –¥–ª—è —Ç–µ–±—è ' +
                         '–±—É–¥–µ—Ç –∏–¥–µ–∞–ª—å–Ω–∞. –ß—Ç–æ–±—ã —Å—Ç–∞–ª–æ –µ—â—ë –ø—Ä–æ—â–µ, –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—â–µ–Ω–∏–µ –Ω–∞' +
                         ' –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–µ –≤ –ª—é–±–æ–º —É–¥–æ–±–Ω–æ–º –¥–ª—è —Ç–µ–±—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ –∏–ª–∏ –º–æ–∂–µ–º' +
                         ' –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤ —Å—Ç—É–¥–∏–∏. –ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —Ç–µ–±–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ:',
                         reply_markup=markup)


def convert_report(r):
    text = "–ê–Ω–∫–µ—Ç–∞\n"

    for key in r:
        val = r[key]
        if val in report_text:
            text += f'{key}: {report_text[val]}\n'
        else:
            text += f'{key}: {val}\n'

    return text


bot.polling(none_stop=True, interval=0)

# –ù—É–∂–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π:
# –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–∫–µ—Ç—É –≤ —á–∞—Ç –¥–ª—è –∞–Ω–∫–µ—Ç: –µ—Å–ª–∏ –±–æ—Ç–∞ –Ω–µ—Ç –≤ —á–∞—Ç–µ - –≤—ã–ª–µ—Ç–∞–µ—Ç –æ—à–∏–±–∫–∞.

# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –≤–º–µ—Å—Ç–æ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏

# –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–∏—Ç –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É, "–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ"


# bot.answer_callback_query(callback_query_id=cmd.id, text="–ò–∑–º–µ–Ω—è—Ç—å –≥–æ–ª–æ—Å –∑–∞–ø—Ä–µ—â–µ–Ω–æ", show_alert=False)
#
# bot.answer_callback_query(callback_query_id=cmd.id, text="–ù–µ–≤–µ—Ä–Ω–æ, –í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç...", show_alert=True)